---
import ChevronRight from "../icons/chevron-right.astro";
import { HTMLAttributes } from "astro/types";
import Color from "color";

import { getPosts } from "../api/github";
import { formatDate } from "../utils";

export type Props = HTMLAttributes<"ul">;

const posts = await getPosts(10);
---

<section
  class="flex snap-x scroll-p-8 gap-8 overflow-auto p-8"
  aria-labelledby="notes"
>
  <header
    class="flex max-w-[60%] shrink-0 snap-start flex-row items-center gap-2"
  >
    <div class="flex flex-col gap-4">
      <h2 id="notes" class="text-4xl">Notes</h2>
      <div>
        <p class="text-lg leading-5 sm:text-xl">
          Mostly web, but other things too.
        </p>
        <a href="/posts" class="leading-10 underline decoration-2">See all</a>
      </div>
    </div>
    <ChevronRight class="h-16" />
  </header>
  <ul class="contents">
    {
      posts.map((post) => {
        const topic = post.labels.nodes.find((label) =>
          label.name.startsWith("topic:")
        );

        const color = Color(`#${topic.color}`);
        const hsl = color.hsl();
        const textColor = color.isDark() ? "#fff" : "#000";
        const publishedAt = formatDate(post.publishedAt);

        // TODO: slugify
        return (
          <li class="shrink-0 snap-start">
            <a
              href={`/posts/${post.number}`}
              rel="prefetch"
              style={{
                "--bg-h": `${hsl.hue().toFixed(2)}deg`,
                "--bg-s": `${hsl.saturationv().toFixed(2)}%`,
                "--bg-l": `${hsl.lightness().toFixed(2)}%`,
                "--color": textColor,
              }}
              class="card outline-on-primary block rounded-2xl outline-4 transition-all duration-300 ease-in"
            >
              <div class="flex h-full flex-col justify-between p-8">
                <div class="self-start rounded-md bg-white/20 py-1 px-3 text-xs backdrop-blur-md">
                  {publishedAt}
                </div>
                <p class="text-2xl">{post.title}</p>
              </div>
            </a>
          </li>
        );
      })
    }
  </ul>
  <footer class="h-full shrink-0 snap-end self-center">
    <a
      href="/posts"
      class="text-background bg-on-background/10 outline-on-primary hover:bg-on-background/20 focus:bg-on-background/20 flex h-full items-center gap-2 rounded-2xl p-8 text-xl outline-2 transition-all duration-300"
      >More <ChevronRight aria-hidden="true" class="h-5" /></a
    >
  </footer>
</section>

<style>
  .card {
    --bg-hsl: var(--bg-h) var(--bg-s) var(--bg-l);
    --color: theme("colors.black");
    --bg: hsl(var(--bg-hsl) / 1);
    --bg-gradient-saturation: max(calc(var(--bg-s) - 30%), 0%);
    --bg-gradient-lightness: var(--bg-l);
    inline-size: clamp(14rem, 20rem, 70vw);
    block-size: clamp(20rem, 40vh, 25rem);
    background-color: var(--bg);
    background-image: radial-gradient(
        circle at top right,
        hsl(
          max(calc(var(--bg-h) - 20deg), 0deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness)
        ),
        hsl(
          max(calc(var(--bg-h) - 10deg), 0deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness) / 0%
        )
      ),
      radial-gradient(
        circle at 40% 90%,
        hsl(
          min(calc(var(--bg-h) + 20deg), 360deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 5%), 0%)
        ),
        hsl(
          min(calc(var(--bg-h) + 10deg), 360deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 10%), 0%) / 0%
        )
      );
    background-size: 100% 100%;
    border: 2px solid hsl(var(--bg-h) var(--bg-s) 50% / 0.5);
    color: var(--color);
    box-shadow: 0 -1px theme("spacing.2") theme("colors.on-primary/0.2"),
      0 1px theme("spacing.4") hsl(var(--bg-hsl) / 0.8);

    &:where(:focus, :hover) {
      background-size: 200% 200%;
    }
  }
</style>
