---
import ChevronRight from "../icons/chevron-right.astro";
import Color from "color";

import { formatDate } from "../utils";
import { getPages } from "../api/notion";

const posts = await getPages(10);
---

<section
  class="flex snap-x scroll-px-8 gap-8 overflow-auto px-8 py-10"
  aria-labelledby="notes"
>
  <header
    class="flex max-w-[60%] shrink-0 snap-start flex-row items-center gap-2"
  >
    <div class="flex flex-col gap-6">
      <h2 id="notes" class="text-4xl">Notes</h2>
      <p class="text-lg sm:text-xl">Mostly web, but other things too.</p>
      <a href="/posts" class="leading-10 underline decoration-2">See all</a>
    </div>
    <ChevronRight class="h-16" />
  </header>
  <ul class="contents">
    {
      posts.map((post) => {
        const color = Color(post.topic.color);
        const pastel = color.mix(Color("white"), 0.6);

        const hsl = pastel.hsl();
        const createdAt = formatDate(post.createdAt);

        // TODO: slugify
        return (
          <li class="contents">
            <a
              href={`/posts/${post.slug}`}
              rel="prefetch"
              style={{
                "--bg-h": `${hsl.hue().toPrecision(2)}deg`,
                "--bg-s": `${hsl.saturationv().toPrecision(2)}%`,
                "--bg-l": `${hsl.lightness().toPrecision(2)}%`,
              }}
              class:list={[
                "card isolate shrink-0 snap-start outline-on-primary block rounded-2xl outline-4 transition-all duration-300 ease-in",
                pastel.isDark() ? "text-on-background" : "text-on-primary",
              ]}
            >
              <div class="flex h-full flex-col justify-between p-8">
                <div class="self-start rounded-md bg-white/20 py-1 px-3 text-xs backdrop-blur-md">
                  {createdAt}
                </div>
                <p class="xs:text-2xl text-xl">{post.title}</p>
              </div>
            </a>
          </li>
        );
      })
    }
  </ul>
  <footer class="h-full shrink-0 snap-end self-center">
    <a
      href="/posts"
      class="text-background bg-on-background/10 outline-on-primary hover:bg-on-background/20 focus:bg-on-background/20 flex h-full items-center gap-2 rounded-2xl p-8 text-xl outline-2 transition-all duration-300"
      >All <ChevronRight aria-hidden="true" class="h-5" /></a
    >
  </footer>
</section>

<style>
  @property --bg-gradient-lightness {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
  }
  .card {
    --bg-hsl: var(--bg-h) var(--bg-s) var(--bg-l);
    --bg: hsl(var(--bg-hsl) / 1);
    --bg-gradient-saturation: min(calc(var(--bg-s) + 20%), 100%);
    --bg-gradient-lightness: var(--bg-l);
    --bg-gradient: radial-gradient(
        circle at top right,
        hsl(
          max(calc(var(--bg-h) - 20deg), 10deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness)
        ),
        hsl(
          max(calc(var(--bg-h) - 10deg), 10deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness) / 0%
        )
      ),
      radial-gradient(
        circle at 40% 90%,
        hsl(
          min(calc(var(--bg-h) + 20deg), 350deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 5%), 10%)
        ),
        hsl(
          min(calc(var(--bg-h) + 10deg), 350deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 10%), 10%) / 0%
        )
      );
    position: relative;
    inline-size: clamp(16rem, 20rem, 80vw);
    block-size: clamp(12rem, 40vh, 25rem);
    background-color: var(--bg);
    transform-style: preserve-3d;
    background-image: var(--bg-gradient);

    &:where(:focus, :hover) {
      --bg-gradient-lightness: max(calc(var(--bg-l) - 2%), 10%);
    }
    &:where(:focus) {
      @apply ring-4 outline-none ring-current;
    }
  }
</style>
