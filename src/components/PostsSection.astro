---
import ChevronRight from "../icons/chevron-right.astro";
import Color from "color";

import { formatDate } from "../utils";
import { topicColor } from "../content/config";
import { getFeed } from "../content/_utils";

const feed = await getFeed();

const postsWithColor = feed.map((post) => {
  const { topic, title, publishDate } = post.data;

  let color: Color;
  if (topic) {
    color = Color(topicColor.get(topic));
  } else {
    color = Color(`#232946`);
  }

  const pastel = color.mix(Color("white"), 0.2).hsl().saturate(-0.5);

  const createdAt = formatDate(publishDate);
  return {
    title,
    color: pastel,
    createdAt,
    slug: post.slug,
  };
});
---

<section
  class="flex snap-x snap-mandatory scroll-px-8 gap-8 overflow-auto px-8 py-10"
  aria-labelledby="notes"
>
  <header
    class="flex max-w-[60%] shrink-0 snap-start flex-row items-center gap-2"
  >
    <div class="animate-appearSlideIn flex flex-col gap-6">
      <h2 id="notes" class="text-4xl">Feed</h2>
      <p class="text-lg sm:text-xl">Mostly web, but other things too.</p>
      <a href="/feed" class="leading-10 underline decoration-2">See all</a>
    </div>
    <ChevronRight class="animate-arrow h-16" />
  </header>
  <ul class="contents">
    {
      postsWithColor.map(({ color, title, createdAt, slug }, index) => {
        return (
          <li class="contents">
            <a
              href={`/feed/${slug}`}
              rel="prefetch"
              style={{
                "--bg-h": `${color.hue().toPrecision(2)}deg`,
                "--bg-s": `${color.saturationv().toPrecision(2)}%`,
                "--bg-l": `${color.lightness().toPrecision(2)}%`,
                "--index": index,
              }}
              class:list={[
                "card animate-feed-item isolate shrink-0 snap-start outline-on-primary block rounded-2xl outline-4 transition-all duration-300 ease-in",
                color.isDark() ? "text-on-background" : "text-on-primary",
              ]}
            >
              <div class="flex h-full flex-col justify-between p-8">
                <div class="self-start rounded-md bg-white/20 px-3 py-1 text-xs backdrop-blur-md">
                  {createdAt}
                </div>
                <p class="xs:text-2xl text-xl">{title}</p>
              </div>
            </a>
          </li>
        );
      })
    }
  </ul>
  <footer class="h-full shrink-0 snap-end self-center">
    <a
      href="/feed"
      class="text-background bg-on-background/10 outline-on-primary hover:bg-on-background/20 focus:bg-on-background/20 flex h-full items-center gap-2 rounded-2xl p-8 text-xl outline-2 transition-all duration-300"
      >All <ChevronRight aria-hidden="true" class="h-5" /></a
    >
  </footer>
</section>

<style>
  @property --bg-gradient-lightness {
    syntax: "<percentage>";
    inherits: false;
    initial-value: 0%;
  }
  .card {
    --bg-hsl: var(--bg-h) var(--bg-s) var(--bg-l);
    --bg: hsl(var(--bg-hsl) / 1);
    --bg-gradient-saturation: min(calc(var(--bg-s) + 20%), 100%);
    --bg-gradient-lightness: var(--bg-l);
    --bg-gradient: radial-gradient(
        circle at top right,
        hsl(
          max(calc(var(--bg-h) - 20deg), 10deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness)
        ),
        hsl(
          max(calc(var(--bg-h) - 10deg), 10deg) var(--bg-gradient-saturation)
            var(--bg-gradient-lightness) / 0%
        )
      ),
      radial-gradient(
        circle at 40% 90%,
        hsl(
          min(calc(var(--bg-h) + 20deg), 350deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 5%), 10%)
        ),
        hsl(
          min(calc(var(--bg-h) + 10deg), 350deg) var(--bg-gradient-saturation)
            max(calc(var(--bg-gradient-lightness) - 10%), 10%) / 0%
        )
      );
    position: relative;
    inline-size: clamp(16rem, 20rem, 80vw);
    block-size: clamp(12rem, 40vh, 25rem);
    background-color: var(--bg);
    transform-style: preserve-3d;
    background-image: var(--bg-gradient);

    &:where(:focus, :hover) {
      --bg-gradient-lightness: max(calc(var(--bg-l) - 4%), 10%);
    }
    &:where(:focus) {
      @apply ring-4 outline-none ring-current;
    }
  }

  .animate-arrow {
    --x: -0.5rem;
    animation: slideC 0.3s 0.1s ease-in both;
  }
  .animate-feed-item {
    --x: 1rem;
    --index: 0;
    --delay: calc(var(--index) * 0.2s);
    --opacity-start: 1;
    animation: slideX 1s var(--delay) both;
    animation-timing-function: cubic-bezier(0.5, -0.53, 0.14, 1.23);
  }

  @keyframes slideY {
    0% {
      transform: translateY(var(--y));
      opacity: 0;
    }
    100% {
      transform: none;
      opacity: 1;
    }
  }

  @keyframes slideX {
    0% {
      opacity: var(--opacity-start, 0);
      transform: translateX(var(--x));
    }
    60% {
      opacity: 1;
    }
    100% {
      opacity: 1;
      transform: none;
    }
  }
</style>
