---
import { FragmentPostsPostFragment } from "../api/generated/graphql";
import ArrowUpRight from "../icons/arrow-up-right.astro";
import { frontmatter } from "../utils/markdown";

export type Props = {
  post: FragmentPostsPostFragment;
};
const { post } = Astro.props;
const data = frontmatter(post);
const topic = post.labels.nodes.find((label) =>
  label.name.startsWith("topic:")
);
const topicName = topic ? topic.name.slice("topic:".length) : null;
---

<article
  class="group/image-container flex max-w-3xl cursor-pointer flex-col gap-4"
>
  <div class="flex flex-row items-start justify-between gap-4">
    <h3
      class="bg-primary inline-block text-2xl font-semibold group-hover/image-container:underline md:text-4xl"
    >
      {post.title}
    </h3>
    <div class="bg-on-background text-on-primary rounded-sm p-1">
      {topicName}
    </div>
  </div>
  <div class="flex flex-row gap-4">
    <div class="self-start overflow-hidden rounded-2xl">
      <img
        src={data.poster}
        title={data.posterAlt}
        alt={data.posterAlt}
        class="image w-full max-w-xl rounded-2xl object-cover transition-transform duration-[2s] group-hover/image-container:scale-105 md:aspect-square"
      />
    </div>
    <div
      class="hidden w-full min-w-[240px] flex-col justify-between gap-4 md:flex"
    >
      <p class="w-full min-w-[240px]">
        {data.description}
      </p>
      <ArrowUpRight class="mr-8 h-16 w-16 self-end" />
    </div>
  </div>
</article>

<style>
  .image {
    isolation: isolate;
    backface-visibility: hidden;
  }
</style>
