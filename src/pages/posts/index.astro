---
import { getPostsData } from "../../api/posts";
import Header from "../../components/Header.astro";
import PinnedPost from "../../components/PinnedPost.astro";
import MainLayout from "../../layouts/Main.astro";
import PostLayout from "../../layouts/Post.astro";
import { formatDate } from "../../utils";
import { frontmatter } from "../../utils/markdown";

const topic = Astro.url.searchParams.get("topic");

export const prerender = true;

// clean up empty URL param
if (!topic && Astro.url.searchParams.has("topic")) {
  return Astro.redirect("/posts");
}

let { pinnedPost, posts, topics } = await getPostsData(100, { topic });
---

<MainLayout
  title="Oleksandr Sh. content"
  description="Sharing ideas about Software Engineering, Web Development, and Life of an Indie hacker through text, code and memes."
>
  <header class="bg-primary text-on-primary">
    <PostLayout>
      <Header backLink="/"><b slot="back-link">Home</b></Header>
    </PostLayout>
  </header>
  <main>
    <div
      class="bg-primary text-on-primary flex flex-col items-start justify-between"
    >
      <PostLayout>
        <h1 class="mb-12 text-7xl font-bold md:mb-24">Notes</h1>
        {pinnedPost && <PinnedPost post={pinnedPost} />}
      </PostLayout>
    </div>
    <PostLayout>
      <div class="flex flex-col gap-16">
        <ul class="flex max-w-full flex-row gap-4 overflow-auto pl-2.5">
          <li
            class:list={[
              !topic
                ? "bg-primary text-on-primary"
                : "bg-transparent text-on-background",
              "min-w-[3rem] text-sm rounded-full px-2 py-1 text-center font-light",
            ]}
          >
            <a href="?topic=">All</a>
          </li>
          {
            topics.map((label) => {
              const name = label.name.slice(label.name.indexOf(":") + 1);
              return (
                <li
                  class:list={[
                    topic === name
                      ? "bg-primary text-on-primary"
                      : "bg-transparent text-on-background",
                    "min-w-[3rem] text-sm rounded-full px-2 py-1 text-center font-light",
                  ]}
                >
                  <a href={`?topic=${label.name}`}>#{name}</a>
                </li>
              );
            })
          }
        </ul>
        <ul class="flex flex-col gap-24">
          {
            posts.map((post) => {
              const data = frontmatter({ body: post.body });
              const labels = post.labels?.nodes?.filter(
                (node) => !node.name.startsWith("topic:")
              );
              return (
                <li>
                  <a
                    href={`/posts/${post.number}`}
                    class="text-on-background group/post flex flex-row items-center gap-8"
                  >
                    <div class="w-64 shrink-0">
                      {data.poster ? (
                        <img
                          src={data.poster}
                          alt={data.posterAlt}
                          class="ring-on-background/80 shadow-background w-full rounded-xl object-contain shadow-md transition-shadow duration-300 group-hover/post:ring-4 group-focus/post:ring-4"
                        />
                      ) : (
                        <div class="aspect-video w-56" />
                      )}
                    </div>
                    <div class="flex flex-col gap-4">
                      <h3 class="text-2xl group-hover/post:underline group-focus/post:underline">
                        {post.title}
                      </h3>
                      <p class="text-md text-on-background/90 hidden sm:block">
                        {data.description}
                      </p>
                      <div class="text-on-background/80 flex flex-row flex-wrap items-center justify-between gap-4 text-sm">
                        <ul class="flex flex-row flex-wrap gap-2">
                          {labels?.map((node) => (
                            <li class="rounded-full py-1 px-2">#{node.name}</li>
                          ))}
                        </ul>
                        <div class="flex flex-row gap-2">
                          <div>{formatDate(post.createdAt)}</div>
                          <div>by Oleksandr Sh.</div>
                        </div>
                      </div>
                    </div>
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
    </PostLayout>
  </main>
</MainLayout>
