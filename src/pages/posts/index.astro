---
import { getPages, getTopics } from "../../api/notion";
import Header from "../../components/Header.astro";
import NotionBlock from "../../components/NotionBlock.astro";
import PinnedPost from "../../components/PinnedPost.astro";
import MainLayout from "../../layouts/Main.astro";
import PostLayout from "../../layouts/Post.astro";
import { formatDate } from "../../utils";

const topic = Astro.url.searchParams.get("topic");

export const prerender = true;

// clean up empty URL param
if (!topic && Astro.url.searchParams.has("topic")) {
  return Astro.redirect("/posts");
}

const posts = await getPages(100, { topic });
const pinnedPost = posts.find((post) => post.pinned);
const topics = await getTopics();
---

<MainLayout
  title="Oleksandr Sh. content"
  description="Sharing ideas about Software Engineering, Web Development, and Life of an Indie hacker through text, code and memes."
>
  <header class="bg-primary text-on-primary">
    <PostLayout>
      <Header backLink="/"><b slot="back-link">Home</b></Header>
    </PostLayout>
  </header>
  <main>
    <div
      class="bg-primary text-on-primary flex flex-col items-start justify-between"
    >
      <PostLayout>
        <h1 class="mb-12 text-7xl font-bold md:mb-24">Notes</h1>
        {pinnedPost && <PinnedPost post={pinnedPost} />}
      </PostLayout>
    </div>
    <PostLayout>
      <div class="flex flex-col gap-12 sm:gap-16">
        <ul class="flex max-w-full flex-row gap-4 overflow-auto p-2">
          <li
            class:list={[
              !topic
                ? "bg-primary text-on-primary"
                : "bg-transparent text-on-background",
              "min-w-[3rem] text-sm rounded-full px-2 py-1 text-center font-light focus-within:ring-2 ring-on-background",
            ]}
          >
            <a class="outline-none" href="?topic=">All</a>
          </li>
          {
            topics.map((tag) => {
              return (
                <li
                  class:list={[
                    topic === tag
                      ? "bg-primary text-on-primary"
                      : "bg-transparent text-on-background",
                    "min-w-[3rem] text-sm rounded-full px-2 py-1 text-center font-light focus-within:ring-2 ring-on-background",
                  ]}
                >
                  <a class="outline-none" href={`?topic=${tag}`}>
                    #{tag.toLowerCase()}
                  </a>
                </li>
              );
            })
          }
        </ul>
        <ul class="flex flex-col gap-24">
          {
            posts.map((post) => {
              return (
                <li>
                  <a
                    href={`/posts/${post.slug}`}
                    class="text-on-background group/post grid gap-4 outline-none sm:grid-cols-[4fr_5fr] sm:items-center sm:gap-8"
                  >
                    <h3 class="text-2xl group-hover/post:underline group-focus/post:underline sm:hidden">
                      {post.title}
                    </h3>
                    <div class="w-full shrink-0">
                      {post.cover ? (
                        <img
                          src={post.cover.image}
                          alt={post.cover.alt}
                          class="ring-on-background/80 shadow-background w-full rounded-md object-contain shadow-md transition-shadow duration-300 group-hover/post:ring-2 group-focus/post:ring-2"
                        />
                      ) : (
                        <div class="w-full" />
                      )}
                    </div>
                    <div class="hidden h-full flex-col justify-center gap-4 sm:flex">
                      <h3 class="text-3xl group-hover/post:underline group-focus/post:underline">
                        {post.title}
                      </h3>
                      <p class="text-md text-on-background/90 ">
                        <NotionBlock text={post.summary} />
                      </p>
                    </div>
                    <div class="hidden sm:block" />
                    <div class="text-on-background/80 flex flex-row flex-wrap items-center justify-between gap-4 text-sm">
                      <ul class="flex flex-row flex-wrap gap-2">
                        {post.tags?.map((tag) => (
                          <li>{`#${tag}`}</li>
                        ))}
                      </ul>
                      <time datetime={post.createdAt}>
                        {formatDate(post.createdAt)}
                      </time>
                    </div>
                  </a>
                </li>
              );
            })
          }
        </ul>
      </div>
    </PostLayout>
  </main>
</MainLayout>
